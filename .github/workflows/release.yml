name: 'publish'

on:
    release:
        types: [published]

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    build:
        strategy:
            fail-fast: false
            matrix:
                platform: [windows-latest, ubuntu-latest]
                include:
                    - platform: windows-latest
                      release_file_executable: ./src-tauri/target/release/ReplicArma.exe
                      release_file_installer: ./src-tauri/target/release/bundle/msi/*.msi
                      release_file_updater: ./src-tauri/target/release/bundle/msi/*.msi.zip
                      release_file_sig: ./src-tauri/target/release/bundle/msi/*.msi.zip.sig
                    - platform: ubuntu-latest
                      release_file_executable: ./src-tauri/target/release/replic-arma
                      release_file_installer: ./src-tauri/target/release/bundle/appimage/*.AppImage
                      release_file_updater: ./src-tauri/target/release/bundle/appimage/*.tar.gz
                      release_file_sig: ./src-tauri/target/release/bundle/appimage/*.tar.gz.sig

        outputs:
            sig_linux: ${{ steps.sig_linux.outputs.signature }}
            sig_windows: ${{ steps.sig_windows.outputs.signature }}
            url_linux: ${{ steps.url_linux.outputs.url }}
            url_windows: ${{ steps.url_windows.outputs.url }}

        runs-on: ${{ matrix.platform }}
        steps:
            - uses: actions/checkout@v2

            - name: setup node
              uses: actions/setup-node@v1
              with:
                  node-version: 16

            - name: install Rust stable
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable

            - name: install dependencies (ubuntu only)
              if: matrix.platform == 'ubuntu-latest'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

            - name: Build Tauri
              id: build
              run: |
                  npm ci
                  npm run build
              env:
                  TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
                  TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

            - name: Upload asset (executable)
              uses: shogo82148/actions-upload-release-asset@v1
              with:
                  upload_url: ${{ github.event.release.upload_url }}
                  asset_path: ${{ matrix.release_file_executable }}

            - name: Upload asset (installer)
              uses: shogo82148/actions-upload-release-asset@v1
              with:
                  upload_url: ${{ github.event.release.upload_url }}
                  asset_path: ${{ matrix.release_file_installer }}

            - name: Upload asset (updater)
              id: updater
              uses: shogo82148/actions-upload-release-asset@v1
              with:
                  upload_url: ${{ github.event.release.upload_url }}
                  asset_path: ${{ matrix.release_file_updater }}

            - name: Find signatures files
              uses: tj-actions/glob@v9.2
              id: glob
              with:
                  files: ${{ matrix.release_file_sig }}

            - name: Set signature ouput (linux)
              if: matrix.platform == 'ubuntu-latest'
              id: sig_linux
              run: echo "::set-output name=signature::$(cat ${{steps.glob.outputs.paths}})"

            - name: Set signature ouput (windoof)
              if: matrix.platform == 'windows-latest'
              id: sig_windows
              run: |
                  $sig = cat ${{steps.glob.outputs.paths}};
                  echo "::set-output name=signature::$sig"

            - name: Set url ouput (linux)
              if: matrix.platform == 'ubuntu-latest'
              id: url_linux
              run: echo "::set-output name=url::${{steps.updater.outputs.browser_download_url}}"

            - name: Set url ouput (windoof)
              if: matrix.platform == 'windows-latest'
              id: url_windows
              run: echo "::set-output name=url::${{steps.updater.outputs.browser_download_url}}"

    build-release-json:
        needs: build
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: 16

            - name: Install dependencies
              run: npm install

            - name: Create release.json
              run: npm run release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SIG_LINUX: ${{needs.build.outputs.sig_linux}}
                  SIG_WINDOWS: ${{needs.build.outputs.sig_windows}}
                  URL_LINUX: ${{needs.build.outputs.url_linux}}
                  URL_WINDOWS: ${{needs.build.outputs.url_windows}}
