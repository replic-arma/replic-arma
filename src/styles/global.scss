@import url('https://fonts.googleapis.com/css?family=Roboto|Source+Sans+Pro|Source+Code+Pro&display=swap');
$btnColor: #2F80ED;
$btnColorDanger: #EB5757;
:root {
    --c-text-1: #333333;
    --c-text-2: #595959;
    --c-text-3: #7D7D7D;

    --c-surf-1: #F0F1F2; // BACKGROUND
    --c-surf-2: #2F80ED; // "ACCENT"
    --c-surf-3: rgba(0, 0, 0, 0.1); // HOVER
    --c-surf-4: #FFFFFF;

    --shadow-1:  0 0 .125rem 0 rgb(0 0 0 / 20%);
    --shadow-2:  0 0 .25rem 0 rgb(0 0 0 / 40%);

    --space-xxs: .25rem;
    --space-xs:  .5rem;
    --space-sm:  1rem;
    --space-md:  1.5rem;
    --space-lg:  2rem;
    --space-xl:  3rem;
    --space-xxl: 6rem;
}

* {
  box-sizing: border-box;
}

html {
  block-size: 100%;
}

body {
    padding-block-start: var(--space-xs);
    padding-block-end: var(--space-xs);
    padding-inline: var(--space-xl);
    font-family: 'Source Sans Pro', sans-serif;
    background-color: var(--c-surf-1);
    color: var(--c-text-1);
}

h1, h2, h3, h4, h5, h6 {
    font-family: Roboto, sans-serif;
}

#app {
  max-width: 2000px;
  min-width: 960px;
  margin: auto;
}

a {
  cursor: pointer;
  color: inherit;
  text-decoration: none;
}

a.button {
  text-decoration: none;
}

button.button {
  border: none;
  background-color: transparent;
  font-family: inherit;
  padding: 0;
  cursor: pointer;

  @media screen and (-ms-high-contrast: active) {
    border: 2px solid currentcolor;
  }
}

a.button,
button.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

button.button {
  background-color: $btnColor;
  color: #fff;
  border-radius: 8px;
  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.18);
  padding: 0.25em 0.75em;
  min-width: 10ch;
  min-height: 44px;
  text-align: center;
  line-height: 1.1;
  transition: 150ms all ease-in-out;
  align-self: start;
  
  &:hover {
    background-color: scale-color($btnColor, $lightness: -20%);
  }

  &:focus {
    outline-style: solid;
    outline-color: transparent;
    box-shadow: 0 0 0 4px scale-color($btnColor, $lightness: -40%);
  }

  &:hover,
  &:active {
    background-color: scale-color($btnColor, $lightness: -20%);
  }

  &--block {
    inline-size: 100%;
  }

  &--outline {
    background: transparent;
    &:hover {
      background: transparent;
    }
  }

  &--center {
    align-self: center;
  }

  &--danger {
    color: $btnColorDanger;
    border: 1px solid scale-color($btnColorDanger, $lightness: -20%);
    &:focus {
      outline-style: solid;
      outline-color: transparent;
      box-shadow: 0 0 0 4px scale-color($btnColorDanger, $lightness: -40%);
    }
    &:hover {
      color: white;
      background-color: scale-color($btnColorDanger, $lightness: -15%);
    }
  }
}

// SWITCH --------------------------------------------------------------
$thumbSize: 1.5em;
$trackPadding: 0.125em;

input[type="checkbox"][role="switch"] {
    appearance: none;
    cursor: pointer;
    inline-size: $thumbSize * 2;
    block-size: $thumbSize;
    background-color: var(--c-text-3);
    border-radius: calc(#{$trackPadding} * 2 + #{$thumbSize});
    transition: .15s ease-in-out;
    border: $trackPadding solid var(--c-text-3);
    box-sizing: content-box;
    display: grid;
    grid: [track] 1fr / [track] 1fr;
    align-items: center;
    outline: 0;

    &::after {
        content: '';
        inline-size: $thumbSize;
        block-size: $thumbSize;
        background-color: var(--c-surf-1);
        border-radius: 50%;
        transition: inherit;
        grid-area: track;
    }

    &:checked {
        background-color: #66AA66;
        border-color: #66AA66;

        &::after {
            transform: translateX(100%);
        }
    }

    &:indeterminate {
        &::after {
            transform: translateX(50%);
        }
    }

    &:focus, &:hover {
        &::after {
            box-shadow: 0 0 0 0.4 * $thumbSize var(--c-surf-3);
        }
    }
}
.txt {
    &__input-wrapper {
        block-size: 2.5rem;
        padding-inline: 1rem;
        position: relative;
        background: #fff;
        border-radius: .5rem;
        margin-block-start: .25rem;
    }
    &__input {
        inline-size: 100%;
        block-size: 100%;
        outline: 0;
        border: none;
        background: none;
    }
}

@keyframes spinner-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.spinner {
  display: inline-block;
  border: 4px solid rgba(0, 0, 0, 0.1);
  border-left-color: #ffffff;
  border-radius: 50%;
  width: 30px;
  height: 30px;
  animation: spinner-spin 1.2s linear infinite;
}

.status--finished {
    color: #27AE60;
}
.status--updating {
    color: inherit;
}

.gui-toast-group {
  position: fixed;
  z-index: 1;
  inset-block-end: 0;
  inset-inline: 0;
  padding-block-end: 5vh;

  display: grid;
  justify-items: center;
  justify-content: center;
  gap: 1vh;

  /* optimizations */
  pointer-events: none;
}

.gui-toast {
  --_duration: 3s;
  --_bg-lightness: 90%;
  --_travel-distance: 0;

  font-family: system-ui, sans-serif;
  color: black;
  background: hsl(0 0% var(--_bg-lightness) / 90%);
  
  max-inline-size: 90vw;
  padding-block: .5ch;
  padding-inline: 1ch;
  border-radius: 3px;
  font-size: 1rem;

  will-change: transform;
  animation: 
    fade-in .3s ease,
    slide-in .3s ease,
    fade-out .3s ease var(--_duration);

  @media (--dark) {
    color: white;
    --_bg-lightness: 20%;
  }

  @media (--motionOK) {
    --_travel-distance: 5vh;
  }
}

@keyframes fade-in {
  from { opacity: 0 }
}

@keyframes fade-out {
  to { opacity: 0 }
}

@keyframes slide-in {
  from { transform: translateY(var(--_travel-distance, 10px)) }
}

.select {
  block-size: 2.5rem;
  inline-size: 5rem;
}
.select--lg {
  inline-size: 10rem;
}

.select--xxl {
  inline-size: 100%;
}

.add-button {
  display: grid;
  background: var(--c-surf-3);
  border-radius: 2rem;
  inline-size: var(--space-xl);
  block-size: var(--space-xl);
  justify-content: center;
  align-content: center;
  margin: auto;
  cursor: pointer;
  color: var(--c-text-2);
}